openapi: '3.0.3'
info:
  title: locale-mgmt api
  version: '1.0.0'
  contact:
    name: github.com/ekr-paolo-carraro
servers:
  - url: https://locale-mgmt.herokuapp.com
    description: main server public
  - url: http://localhost:3000
    description: local server for test


tags:
  - name: 'locale-item'
  - name: 'locale-item-field-list'
  - name: 'string-msg'
  - name: 'info-data'


components:
  schemas:
    locale-item:
      type: object
      properties:
        id:
          description: primary key
          type: string
          example: 1324-567-8900
        bundle:
          description: repository/context for the key; it's part of unique key
          type: string
          example: alert_messages
        key:
          description: key used in software to get the translation for UI
          type: string
          example: ALERT_FOR_BAD_SETTING
        lang:
          description: translation text language
          type: string
          example: en_US
        content:
          description: content text 
          type: string
          example: This setting are not correct. Contact admin for info.
    locale-item-query-params:
      type: object
      properties:
        lang:
          description: translation text language
          type: string
          example: it-IT
        content:
          description: text or part of text to filter result
          type: string
          example: error on retrive items
        key:
          description: key or part of to point content
          type: string
          example: ERROR_ON_FETCH_44
        offset:
          description: index start point for paging results
          type: integer
          format: int32
          example: 10
        limit:
          description: num of items to retrive after offset
          type: integer
          format: int32
          example: 100
    massive-result:
      type: object
      properties:
        num-sucessfull:
          description: num of items that have been processed successfully
          type: integer
          format: int32
          example: 34
        num-failed:
          description: num of items that fail on being processed
          type: integer
          format: int32
          example: 34
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:3000/login
          tokenUrl: http://localhost:3000/login
          scopes:
            read: intended for search api
            write: intended for complete manage

paths:

  /info:
    get:
      summary: Return the service version and user authenticated info 
      operationId: getInfo
      tags:
        - 'info-data'
      security:
        - OAuth2: [read] 
      responses:
        '200':
          description: OK server return version and info user data
          content:
            application/json:
              schema:
                type: object
                properties: 
                  version:
                    type: string
                    example: 1.0.0
                  user: 
                    type: object
                  access_token:
                    type: string
                  id_token:
                    type: string
                    


  /api/v1/restricted:
    get:
      summary: Testing for auth works
      operationId: getRestricted
      tags:
        - 'info-data'
      security:
       - OAuth2: [read]
      responses:
        '200':
          description: A message that confirm it's authorizated
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Hi User name you are in the restricted area"

  /api/v1/bundles:
    get:
      summary: Return all bundle on db
      operationId: getBundles
      tags:
        - locale-item-field-list
      security:
        - OAuth2: [read]
      responses:
        '200':
          description: A list of every bundle present in db
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: string


  /api/v1/bundle/{bundleId}/langs:
    get:
      summary: Return all langs for bundle
      operationId: getBundleLangs
      tags:
        - locale-item-field-list
      security:
        - OAuth2: [read]
      responses:
        '200':
          description: A list of every langs for given bundle
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: string  


  /api/v1/langs:
    get:
      summary: Return all langs on db
      operationId: getLangs
      tags:
        - locale-item-field-list
      security:
        - OAuth2: [read]
      responses:
        '200':
          description: A list of every lang present in db
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: string




  /api/v1/locale-item:
    post:
      summary: Insert one new locale-item in db
      operationId: postLocaleItem
      tags:
        - locale-item
      security:
        - OAuth2: [write]
      requestBody:
        description: locale item to insert in db
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locale-item'
      responses:
        '201':
          description: Locale-item succesfully inserted
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/locale-item'



  /api/v1/locale-items:
    post:
      summary: Insert an array of locale-item in db
      operationId: postLocaleItems
      tags:
        - locale-item
      security:
        - OAuth2: [write]
      requestBody:
        description: array of locale-items to insert in db
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/locale-item'
      responses:
        '201':
          description: Locale-items succesfully inserted
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/massive-result'



  /api/v1/locale-items/{bundle}:
    post:
      summary: Return all locale-items for given bundle and lang and/or content
      operationId: getLocaleItemByBundleLang
      tags:
        - locale-item
      security:
        - OAuth2: [read]
      parameters:
        - in: path
          name: bundle
          description: the name of bundle to get
          required: true
          schema: 
            type: string
      requestBody:
        description: locale item to insert in db
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locale-item-query-params'
      responses:
        '200':
          description: Locale items for given bundle and optionaly lang and/or content
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/locale-item'
    delete:
      summary: Delete all locale items for passed bundle and lang
      operationId: deleteLocaleItemsByBundleLang
      tags:
        - locale-item
      security:
        - OAuth2: [read]
      parameters:
        - in: path
          name: bundle
          description: the name of bundle to delete
          required: true
          schema: 
            type: string
        - in: query
          name: lang
          description: the id of lang
          required: false
          schema: 
            type: string
        - in: query
          name: key
          description: the id of key
          required: false
          schema: 
            type: string
        - in: query
          name: content
          description: part or whole content
          required: false
          schema: 
            type: string
      responses:
        '200':
          description: Confirm that locale items have been deleted
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/massive-result'



  /api/v1/locale-item/{id}:
    get:
      summary: Return locale item by id
      operationId: getLocaleItemById
      tags:
        - locale-item
      security:
        - OAuth2: [read]
      parameters:
        - in: path
          name: id
          description: the locale item id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Locale item for given id
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/locale-item'